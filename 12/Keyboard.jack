// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Keyboard.jack

/**
 * A library for handling user input from the keyboard.
 */
class Keyboard {
    static Array keyboard; 

    /** Initializes the keyboard. */
    function void init() {
        let keyboard = 24576;

        return;
    } 

    /**
     * Returns the character of the currently pressed key on the keyboard;
     * if no key is currently pressed, returns 0.
     *
     * Recognizes all ASCII characters, as well as the following keys:
     * new line = 128 = String.newline()
     * backspace = 129 = String.backspace()
     * left arrow = 130
     * up arrow = 131
     * right arrow = 132
     * down arrow = 133
     * home = 134
     * End = 135
     * page up = 136
     * page down = 137
     * insert = 138
     * delete = 139
     * ESC = 140
     * F1 - F12 = 141 - 152
     */
    function char keyPressed() {
        var char key;
        if (~(keyboard[0] = 0)) {
            let key = keyboard[0];
            return key;
        }
        else {
            return 0;
        }
    }

    /**								
     * Waits until a key is pressed on the keyboard and released,
     * then echoes the key to the screen, and returns the character 
     * of the pressed key.
     */
    function char readChar() {
        var char c;
        while (keyboard[0] = 0) {
            // do nothing
        }
        let c = keyboard[0];
        while (~(keyboard[0] = 0)) {
            // do nothing
        }
		if (~(c = 129)) {
			do Output.printChar(c);
		}
        return c; 
    }

    /**								
     * Displays the message on the screen, reads from the keyboard the entered
     * text until a newline character is detected, echoes the text to the screen,
     * and returns its value. Also handles user backspaces.
     */
    function String readLine(String message) {
        var String s;
        var char ch;
		var int len;
		var boolean newLine;
		let newLine = false;
        let s = String.new(250);
		let len = 0;
        do Output.printString(message);
        while(~newLine) {
			let ch = Keyboard.readChar();
			if (ch = 128) {
				let newLine = true;
				return s;
			}
			if(~(len = 0)) {
				if ((ch = 129)) {
					do s.eraseLastChar();
					let len  = len - 1;
					do Output.backSpace();
					do Output.printChar(32);
					do Output.backSpace();
				}
			}
			if (~(ch = 129)) {
				do s.appendChar(ch);
				let len = len + 1;
			}
        }
        return s;
    }   
    
    /**								
     * Displays the message on the screen, reads from the keyboard the entered
     * text until a newline character is detected, echoes the text to the screen,
     * and returns its integer value (until the first non-digit character in the
     * entered text is detected). Also handles user backspaces. 
     */
    function int readInt(String message) {
        var String s;
        let s = Keyboard.readLine(message);
        return s.intValue();
    }
}
